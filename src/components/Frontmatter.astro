---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

const { data } = Astro.props;
const formattedDate = data.pubDate.toLocaleString("ja-JP", {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
  timeZone: "Asia/Tokyo",
});
const authorsCollection = await getCollection("author");
const authors = authorsCollection.filter((author) =>
  data.author.includes(author.id),
);
---

<style>
  #imageContainer {
    width: 100%;
  }
  #blogContainer h1 {
    font-size: 35px;
  }
  #authors {
    margin-top: 20px;
  }
  .author{
    font-size: 20px;
    color: gray;
    text-decoration: none;
    font-weight: bold;
    margin-right: 20px; 
  }
  .author:hover {
    color: black;
  }
  .pin{
    display: flex;
  }
  .pin img{
    width: 20px;
    height: 20px;
    margin-right: 10px;
  }
  #description {
    margin: 30px 0;
  }
  .tags {
    margin: 20px 0;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
  }
  .tag {
    list-style: none;
    margin: 0 5px;
  }
  .tag a {
    font-weight: bold;
    color: rgb(24, 166, 255);
    text-decoration: none;
  }
</style>
<h1>{data.title}</h1>
<p>{formattedDate}</p>
{data.storeName && <div class="pin"><Image src="/images/pin.png" alt={"pin"} width="2" height="2"/>{data.storeName}</div>}
{data.lastDate && <p>更新: {data.lastDate.toString().slice(0, 10)}</p>}
<p id="authors">
  {
    authors.map((author) => (
      <a class="author" href={`/author/${author.id}`}>{author.data.name}</a>
    ))
  }
</p>
<p id="description"><em>{data.description}</em></p>
<ul class="tags">
  {
    data.tags.map((tag) => (
      <li class="tag">
        <a href={`/tags/${tag}`}>#{tag}</a>
      </li>
    ))
  }
</ul>
<div id="imageContainer">
  <Image src={data.thumbnail.url} width="1080" alt={data.thumbnail.alt} />
</div>
{data.map && <div id="map" set:html={data.map} />}
